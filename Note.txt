## Create Python Django environment
# get all upgarde
sudo apt-get update
sudo apt-get -y upgrade
# install pip
sudo apt-get install python3-pip
# vitrual environment
sudo pip install virtualenv
# install OpenSSH
sudo apt-get -y install openssh-sever
# FTP sever
sudo apt-get -y install vsftpd
# git
sudo apt-get install -y git
# Create a virtual environment: VENV
virtualenv VENV

## VENV virtual environment
source VENV/bin/activate # go into virtual environment
deactivate # exit

## Generate Django web framework
pip install django # install django in VENV
django-admin startproject EyesWeb
cd EyesWeb
python manage.py startapp mainsite
# modify settings.py to let connection works
ALLOWED_HOSTS=['*',]
# start the server
python manage.py runserver


# create a list of the packages in VENV
pip freeze > requirements.txt
# install packages at another environment
pip install -r 'requirements.txt'

# hide django secret key in .env
# settings.py, modify Secret key
SECRET_KEY = str(os.getenv('SECRET_KEY'))
# create .env
SECRET_KEY=key
# create .gitignore
.env

## git
git init
git remote add origin git@github.com:ChaoHuaH/EyesWeb.git
git add .
git commit -m "comment"
git push origin master
git remote -v # check the current repository
git remote set-url origin git@github.com:USERNAME/OTHERREPOSITORY.git # switch to anohter reporsity


## Heroku
sudo wget  -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh
heroku login
sudo apt-get install libpq-dev python-dev
pip install dj-database-url dj-static gunicorn psycopg2



# ==============================================================
## Django file usage

### manage.py
# Manage Website configuration
# Tool for receiving comment line
# normally don't modify it 
# just make sure it runs

### EyesWeb: directory w/ same name as project
# Collection of the important setting files for the project
# including setting.py, urls.py, wsgi.py

### urls.py
# Corresponding function for every URL 
# modify when creating new web

### setting.py
# system setting


# ==============================================================
## Entry Steps

# 1. Modify mainsite/models.py to define data models
python manage.py makemigrations mainsite
python manage.py migrate

# 2. Create a admin
python manage.py createsuperuser

# 3. Modify view.py to show some data on homepage

# 4. Create web templates
mkdir templates

# 5. Add post.html

# 6. Shared template

# 7. Import bootstrap & images

# 8. Markdown

# 9. For heroku uploading
sudo apt-get install libpq-dev python-dev
pip install dj-database-url dj-static gunicorn psycopg2

# 10. fix database setting



# ==============================================================
## Django MVC sturcture

# 1. Model
# 1.1 define table columns in models.py
# 1.2 add the model name in setting.py: INSTALL_APP
# 1.3 run makemigrations and migrate
python manage.py makemigrations
python manage.py migrate
# 1.4 define table management interface in admin.py
admin.site.register(Product)

# 1_remark Operate table in Python shell
# start Python shell
python manage.py shell
#
python shell

# create table by shell
from mainsite.models import Product
p = Product.objects.create(sku = '0001', name = 'GrayBox', price = 100, size = 'S')
p.save()
exit()

# get the content in the table
from mainsite.models import Product
allp = Product.objects.all()
for p in allp:
    print(p.name, ', ', p.price)

# 2. View
# 2.1 define function showing web content in views.py
# 2.2 set the url path in urls.py

# 3. Template
# 3.1 Set the html sturcture in templates/xxx.html
# 3.2 According to the sturcture of templates/xxx.html, edit the def in view.py

# ==============================================================
## Templates

# 1. setting
# Modify the setting.py
# 'DIRS': [os.path.join(BASE_DIR, 'templates')]

# 2. Create directory named templates (both in APP and root)

# 3. Template set up
# 3.1 create html file
# 3.2 prepare data in view.py
# 3.3 render in view.py >>  {{ id }} { %cmd$ } 
return render(request, 'index.html', {'msg':'Hello'})


